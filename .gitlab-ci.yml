stages:
  - install
  - test
  - deploy
  
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - .cache/poetry
    
before_script:
  - pip install poetry

install:
  stage: install
  script:
    - poetry install
  only:
    - external_pull_requests
  
static_analysis:
  stage: test
  script:
    - poetry run flake8 secrender
  only:
    - external_pull_requests

unit_test:
  stage: test
  script:
    - poetry run coverage run --source=secrender -m pytest --junitxml results.xml -v tests
    - poetry run coverage report -m
    - poetry run coverage html
  artifacts:
    paths:
      - results.xml
      - htmlcov/
    reports:
      junit: results.xml
      
  only:
    - external_pull_requests

functional_test:
  stage: test
  script:
    - cd examples
    - poetry run secrender --in example.yaml --template example.md.j2 --output example.md
    - cat example.md
    - poetry run secrender --in example-include.yaml --template example.md.j2 --output example.md
    - cat example.md
  only:
    - external_pull_requests

pages:
  stage: publish
  dependencies:
    - unit_test
  script:
    - mv htmlcov/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
